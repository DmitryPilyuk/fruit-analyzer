@namespace FruitComponent
@rendermode InteractiveServer

<RadzenUpload id="ddUpload"
ChooseText="Drag and drop your fruit here"
Change=@OnFileChange
Auto="true" 
Multiple="false"
Accept="image/*"
InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})"
Style="width: 100%; position: relative; border: 2px dashed var(--rz-secondary); border-radius: 5px" />

<style>
    #ddUpload {
    left: 0;
    --rz-upload-button-bar-background-color: var(--rz-white);
    --rz-upload-button-bar-padding: 0;
    }

    #ddUpload .rz-fileupload-buttonbar .rz-fileupload-choose {
    width: 100%;
    height: 350px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    color: var(--rz-secondary);
    background-color: var(--rz-white);
    }

    #ddUpload .rz-fileupload-content .rz-fileupload-files {
    border-top: 2px dashed var(--rz-secondary);
    background: var(--rz-white);
    }

    #ddUpload .rz-button {
    background: var(--rz-secondary);
    }

    #ddUpload .rz-fileupload-row div {
        font-size: 1rem;
        color: var(--rz-secondary);
    }
</style>


@code {
    private async void OnFileChange(UploadChangeEventArgs args) 
    {
        if (args.Files.Count() <= 0)
            await onCancel.InvokeAsync(args);
        else
            await onUpload.InvokeAsync(args);
    }

    [Parameter, EditorRequired]
    public EventCallback<UploadChangeEventArgs> onUpload { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<UploadChangeEventArgs> onCancel { get; set; }
}
